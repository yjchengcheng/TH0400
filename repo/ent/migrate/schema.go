// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// AnswersColumns holds the columns for the "answers" table.
	AnswersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "is_deleted", Type: field.TypeBool},
		{Name: "creater_id", Type: field.TypeInt},
	}
	// AnswersTable holds the schema information for the "answers" table.
	AnswersTable = &schema.Table{
		Name:        "answers",
		Columns:     AnswersColumns,
		PrimaryKey:  []*schema.Column{AnswersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "tag_name", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "baned", Type: field.TypeBool},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:        "tags",
		Columns:     TagsColumns,
		PrimaryKey:  []*schema.Column{TagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TagTopicsColumns holds the columns for the "tag_topics" table.
	TagTopicsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "tag_id", Type: field.TypeInt},
		{Name: "topic_id", Type: field.TypeInt},
	}
	// TagTopicsTable holds the schema information for the "tag_topics" table.
	TagTopicsTable = &schema.Table{
		Name:        "tag_topics",
		Columns:     TagTopicsColumns,
		PrimaryKey:  []*schema.Column{TagTopicsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TopicsColumns holds the columns for the "topics" table.
	TopicsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "content", Type: field.TypeString, Size: 2147483647, Default: "caonima"},
		{Name: "is_released", Type: field.TypeBool},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creater_id", Type: field.TypeInt},
	}
	// TopicsTable holds the schema information for the "topics" table.
	TopicsTable = &schema.Table{
		Name:        "topics",
		Columns:     TopicsColumns,
		PrimaryKey:  []*schema.Column{TopicsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_name", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "password", Type: field.TypeString},
		{Name: "school", Type: field.TypeString, Nullable: true},
		{Name: "level", Type: field.TypeInt, Default: 1},
		{Name: "likes", Type: field.TypeInt},
		{Name: "views", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "is_deleted", Type: field.TypeBool},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UserTopicsColumns holds the columns for the "user_topics" table.
	UserTopicsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "topic_id", Type: field.TypeInt},
	}
	// UserTopicsTable holds the schema information for the "user_topics" table.
	UserTopicsTable = &schema.Table{
		Name:        "user_topics",
		Columns:     UserTopicsColumns,
		PrimaryKey:  []*schema.Column{UserTopicsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UserUsersColumns holds the columns for the "user_users" table.
	UserUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "idol_id", Type: field.TypeInt},
		{Name: "follower_id", Type: field.TypeInt},
	}
	// UserUsersTable holds the schema information for the "user_users" table.
	UserUsersTable = &schema.Table{
		Name:        "user_users",
		Columns:     UserUsersColumns,
		PrimaryKey:  []*schema.Column{UserUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UserUserTopicsColumns holds the columns for the "user_user_topics" table.
	UserUserTopicsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "inviter_id", Type: field.TypeInt},
		{Name: "invited_id", Type: field.TypeInt},
		{Name: "topic_id", Type: field.TypeInt},
	}
	// UserUserTopicsTable holds the schema information for the "user_user_topics" table.
	UserUserTopicsTable = &schema.Table{
		Name:        "user_user_topics",
		Columns:     UserUserTopicsColumns,
		PrimaryKey:  []*schema.Column{UserUserTopicsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AnswersTable,
		TagsTable,
		TagTopicsTable,
		TopicsTable,
		UsersTable,
		UserTopicsTable,
		UserUsersTable,
		UserUserTopicsTable,
	}
)

func init() {
}
